from python import bbmap
from python.common import apply_defaults
defaults={'bbduk':{'ram':'1g',
                   'adapter_flags':
                        'ktrim=r k=23 mink=11 hdist=1 tbo tpe tbo tpe',
                   'phix_flags': (
                        'k=27 hdist=1 qtrim=rl trimq=17 cardinality=t '
                        'mingc=0.05 maxgc=0.95'),
                   'threads': 20,
                   },
         }
apply_defaults(config, defaults)

# look in config[system_paths][bbmap] and relative to bbduk.sh script
#  for adapter file folder (aka resources)
if 'resource_dir' not in config['bbduk']:
    config['bbduk']['resource_dir'] = bbmap.get_bbduk_resource_path(config)
    
bbduk_version = get_version('bbduk.sh', lines=[1,],)

rule trim_bbduk_adapters_paired:
    """
    remove adapters with bbduk from a pair of files
    """
    input:
        fwd="{prefix}.R1{suffix}fastq",
        rev="{prefix}.R2{suffix}fastq",
    output:
        fp=temp("{prefix}.R1{suffix}noadaptp.fastq"),
        rp=temp("{prefix}.R2{suffix}noadaptp.fastq"),
        sn=temp("{prefix}.solo{suffix}noadaptp.fastq"),
    wildcard_constraints:
        suffix=r'\..*(?<=\.)'
    benchmark:
        "benchmarks/{prefix}.noadapt_paired.fastq.time"
    log:
        "logs/{prefix}.noadapt_paired.log"
    version:
        bbduk_version
    threads:
        config['bbduk']['threads']
    params:
        adapter_file=config['bbduk']['resource_dir'] \
                        + "/adapters.fa"
    shell:
        "bbduk.sh -Xmx{config[bbduk][ram]} \
          in={input.fwd} in2={input.rev} \
          out={output.fp} out2={output.rp} outs={output.sn} \
          {config[bbduk][adapter_flags]} threads={threads} \
          ref={params.adapter_file} 2> {log}"

rule trim_bbduk_adapters:
    """
    remove adapters with bbduk
    """
    input:
        "{prefix}.{suffix}"
    output:
        temp("{prefix}.noadapt.{suffix}")
    wildcard_constraints:
        suffix=r'(R[12]\.)?fastq'
    benchmark:
        "benchmarks/{prefix}.noadapt.{suffix}.time"
    log:
        "logs/{prefix}.noadapt.{suffix}.log"
    version:
        bbduk_version
    params:
        interleaved=lambda w: \
            'interleaved' if re.search(r'R[12]', w.suffix) is None else '',
        adapter_file=config['bbduk']['resource_dir'] \
                        + "/adapters.fa"
    threads:
        config['bbduk']['threads']
    shell:
        "bbduk.sh -Xmx{config[bbduk][ram]} \
          in={input} out={output} threads={threads} \
          {params.interleaved} overwrite {config[bbduk][adapter_flags]} \
          ref={params.adapter_file} 2> {log}"

rule trim_bbduk_phix:
    """
    remove phiX with bbduk
    """
    input:
        "{prefix}.fastq"
    output:
        temp("{prefix}.nophix.fastq"),
        "{prefix}.nophix.gchist.txt"
    benchmark:
        "benchmarks/{prefix}.nophix.fastq.time"
    log:
        "logs/{prefix}.nophix.log"
    version:
        bbduk_version
    params:
        phiX_file=config['bbduk']['resource_dir'] \
                         + "/phix174_ill.ref.fa.gz",
    threads:
        config['bbduk']['threads']
    shell:
        "bbduk.sh -Xmx{config[bbduk][ram]} threads={threads} \
          in={input} out={output[0]} gchist={output[1]} \
          interleaved overwrite {config[bbduk][phix_flags]} \
          ref={params.phiX_file} 2> {log}"

