from python.common import get_file_name
from python.qc import get_sample_from_reads_prefix

include: "common.snake"

rule rename_raw_reads:
    """ Rename reads to be based on a "sample" name """
    input:
        "{prefix}.{dir}.fastq"
    output:
        reads=temp("{prefix}.renamed.{dir,R[12]}.fastq"),
        name_map="{prefix}.renamed.{dir}.tsv"
    log:
        "logs/{prefix}.renamed.{dir}.log"
    benchmark:
        "benchmarks/{prefix}.renamed.{dir}.time"
    params:
        # Pull sample name from prefix (EG: sample/reads or reads_sample)
        sample=lambda w: get_sample_from_reads_prefix(w.prefix, config)
    run:
        from Bio import SeqIO
        name_root = params.sample
        with open(get_file_name(log), 'w') as LOG:
            LOG.write("Renaming root is %r from %r\n" % (name_root, wildcards.prefix))
        with open(get_file_name(output.reads),'w') as OUTR:
            with open(get_file_name(output.name_map), 'w') as OUTM:
                for i, record in enumerate(
                        SeqIO.parse(get_file_name(input),
                                    'fastq')):
                    old_id = record.id
                    record.id = "{}_{}".format(name_root, i+1)
                    OUTR.write(record.format('fastq'))
                    OUTM.write("{}\t{}\n".format(old_id, record.id))
