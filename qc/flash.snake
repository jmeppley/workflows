from python.qc import dummy_join_fastq

include: "tmatic.snake"
include: 'bbduk.snake'

rule run_flash:
    """ Joins paired illumina reads """
    input:
        fwd="{file_root}.R1.paired.noadaptp.fastq",
        rev="{file_root}.R2.paired.noadaptp.fastq",
    output:
       "{file_root}.paired.notCombined_1.fastq",
       "{file_root}.paired.notCombined_2.fastq",
       "{file_root}.paired.extendedFrags.fastq",
       "{file_root}.paired.histogram",
       "{file_root}.paired.hist",
    log:
        "logs/{file_root}.paired.flash.log",
    benchmark:
        "benchmarks/{file_root}.flash.time"
    version:
        get_version('flash',lines=[0,])
    params:
        opts=config.get('flash', {}).get('params', '-M 200'),
        output="{file_root}.paired"
    shell:
        "flash -o {params.output} {params.opts} {input.fwd} {input.rev} -t 1 \
             > {log} 2>&1"

rule dummy_join:
    """ Joins unjoined illumina read pairs """
    input:
        fwd="{file_root}.notCombined_1.trimmed.fastq",
        rev="{file_root}.notCombined_2.trimmed.fastq"
    output:
        "{file_root}.trimmed.dummy.fastq"
    log:
        "logs/{file_root}.dummy.log"
    benchmark:
        "benchmarks/{file_root}.dummy.time"
    run:
        dummy_join_fastq(input, output, log)

rule merge_flash:
    """ merges flash joins and dummy joins (after some end-trimming) """
    input:
        flah="{file_root}.paired.extendedFrags.trimmed.fastq",
        dummy="{file_root}.paired.trimmed.dummy.fastq",
        singles="{file_root}.solo.paired.noadaptp.trimmed.fastq",
        unpaired1="{file_root}.R1.unpaired.trimmed.fastq",
        unpaired2="{file_root}.R2.unpaired.trimmed.fastq",
    output:
        merged="{file_root}.joined.fastq"
    log:
        "logs/{file_root}.joined.log"
    benchmark:
        "benchmarks/{file_root}.joined.time"
    shell:
        "cat {input} > {output}"
