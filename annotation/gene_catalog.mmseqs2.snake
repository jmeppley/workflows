import tempfile
from python.common import apply_defaults
from python.gene_catalog import parse_mmseq_clusters

# software parameters
# (changes from past version: program -> algorithm
#                             pctid moved into its own param)
defaults = {
    'mmseqs2': {
        'threads': 20,
        'algorithm': 'cluster',
        'pctid': 0.95,
        'options': '-c 0.8 --cov-mode 0 --cluster-mode 0',
        'output_str': 'cluster.setcover.95',
        'tmp_dir_root': '.',
    },
}
apply_defaults(config, defaults)
cluster_suffix = "mmseqs." + config['mmseqs2']['output_str']
cluster_type = config.setdefault('cluster_type', 'ffn')
tmp_dir = tempfile.TemporaryDirectory(dir=config['mmseqs2']['tmp_dir_root'],
                                      prefix='tmp_mmseqs2_')
MMSEQS_TEMPLATE = f"all_genes.{cluster_type}.{cluster_suffix}"
CLUSTER_REPS = MMSEQS_TEMPLATE + "_rep_seq.fasta"

rule cluster_with_mmseq:
    input: f"all_genes.{cluster_type}"
    output:
        tsv=MMSEQS_TEMPLATE + "_cluster.tsv",
        reps=MMSEQS_TEMPLATE + "_rep_seq.fasta",
        seqs=temp(MMSEQS_TEMPLATE + "_all_seqs.fasta"),
    log: MMSEQS_TEMPLATE + ".log"
    benchmark: f'benchmarks/all_genes.{cluster_type}.{cluster_suffix}.time'
    threads: config['mmseqs2']['threads']
    params:
        tmp_dir=tmp_dir.name,
        output=MMSEQS_TEMPLATE
    shell:
        "mmseqs easy-{config[mmseqs2][algorithm]} \
            {input} {params.output} {params.tmp_dir} \
            --min-seq-id {config[mmseqs2][pctid]} \
            {config[mmseqs2][options]} --threads {threads} \
         > {log} 2>&1"

rule reformat_table:
    """ turn mmseqs cluster table into simple cluster table """
    input: rules.cluster_with_mmseq.output.tsv
    output: prefix + ".clusters"
    benchmark: 'benchmarks/{}.clusters.time'.format(prefix)
    run:
        parse_mmseq_clusters(get_file_name(input),
                           get_file_name(output))
